{"version":3,"sources":["FlashMessageWrapper.js"],"names":["X_WIDTH","X_HEIGHT","PAD_WIDTH","PAD_HEIGHT","Dimensions","get","D_HEIGHT","height","D_WIDTH","width","isIPhoneX","Platform","OS","isIPad","isOrientationLandscape","_customStatusBarHeight","statusBarHeight","isLandscape","global","Expo","Constants","doubleFromPercentString","percent","includes","dbl","parseFloat","isNaN","styleWithInset","style","wrapperInset","hideStatusBar","prop","styleWithInsetMargin","viewWidth","StyleSheet","flatten","padding","paddingVertical","paddingHorizontal","paddingTop","paddingBottom","paddingLeft","paddingRight","viewStyle","insetTop","insetBottom","insetLeft","insetRight","margin","marginVertical","marginHorizontal","marginTop","marginBottom","marginLeft","marginRight","FlashMessageWrapper","handleOrientationChange","bind","state","addEventListener","removeEventListener","window","setState","props","position","children","_statusBarHeight","wrapper","Component","defaultProps","propTypes","PropTypes","string","func","isRequired","setStatusBarHeight"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport { Dimensions, Platform, StyleSheet } from \"react-native\";\n\nimport PropTypes from \"prop-types\";\n\n/**\n * DETECTION AND DIMENSIONS CODE FROM:\n * https://github.com/react-community/react-native-safe-area-view\n */\n\nconst X_WIDTH = 375; // iPhone X\nconst X_HEIGHT = 812; // iPhone X\nconst PAD_WIDTH = 768; // iPad\nconst PAD_HEIGHT = 1024; // iPad\n\nconst { height: D_HEIGHT, width: D_WIDTH } = Dimensions.get(\"window\");\n\nconst isIPhoneX = (() => {\n  if (Platform.OS === \"web\") return false;\n\n  return (\n    Platform.OS === \"ios\" &&\n    ((D_HEIGHT === X_HEIGHT && D_WIDTH === X_WIDTH) || (D_HEIGHT === X_WIDTH && D_WIDTH === X_HEIGHT))\n  );\n})();\n\nconst isIPad = (() => {\n  if (Platform.OS !== \"ios\" || isIPhoneX) return false;\n\n  // if portrait and width is smaller than iPad width\n  if (D_HEIGHT > D_WIDTH && D_WIDTH < PAD_WIDTH) {\n    return false;\n  }\n\n  // if landscape and height is smaller that iPad height\n  if (D_WIDTH > D_HEIGHT && D_HEIGHT < PAD_WIDTH) {\n    return false;\n  }\n\n  return true;\n})();\n\nconst isOrientationLandscape = ({ width, height }) => width > height;\n\nlet _customStatusBarHeight = null;\nconst statusBarHeight = (isLandscape = false) => {\n  if (_customStatusBarHeight !== null) {\n    return _customStatusBarHeight;\n  }\n\n  /**\n   * This is a temporary workaround because we don't have a way to detect\n   * if the status bar is translucent or opaque. If opaque, we don't need to\n   * factor in the height here; if translucent (content renders under it) then\n   * we do.\n   */\n  if (Platform.OS === \"android\") {\n    if (global.Expo) {\n      return global.Expo.Constants.statusBarHeight;\n    } else {\n      return 0;\n    }\n  }\n\n  if (isIPhoneX) {\n    return isLandscape ? 0 : 44;\n  }\n\n  if (isIPad) {\n    return 20;\n  }\n\n  return isLandscape ? 0 : 20;\n};\n\nconst doubleFromPercentString = percent => {\n  if (!percent.includes(\"%\")) {\n    return 0;\n  }\n\n  const dbl = parseFloat(percent) / 100;\n\n  if (isNaN(dbl)) return 0;\n\n  return dbl;\n};\n\n/**\n * Helper function to \"append\" extra padding in MessageComponent style\n */\nexport function styleWithInset(style, wrapperInset, hideStatusBar = false, prop = \"padding\") {\n  if (prop === \"margin\") {\n    return styleWithInsetMargin(style, wrapperInset, hideStatusBar);\n  }\n\n  const { width: viewWidth } = Dimensions.get(\"window\");\n\n  let {\n    padding = 0,\n    paddingVertical = padding,\n    paddingHorizontal = padding,\n    paddingTop = paddingVertical,\n    paddingBottom = paddingVertical,\n    paddingLeft = paddingHorizontal,\n    paddingRight = paddingHorizontal,\n    ...viewStyle\n  } = StyleSheet.flatten(style || {});\n\n  if (typeof paddingTop !== \"number\") {\n    paddingTop = doubleFromPercentString(paddingTop) * viewWidth;\n  }\n\n  if (typeof paddingBottom !== \"number\") {\n    paddingBottom = doubleFromPercentString(paddingBottom) * viewWidth;\n  }\n\n  if (typeof paddingLeft !== \"number\") {\n    paddingLeft = doubleFromPercentString(paddingLeft) * viewWidth;\n  }\n\n  if (typeof paddingRight !== \"number\") {\n    paddingRight = doubleFromPercentString(paddingRight) * viewWidth;\n  }\n\n  return {\n    ...viewStyle,\n    paddingTop: !!wrapperInset.isIPhoneX || !hideStatusBar ? paddingTop + wrapperInset.insetTop : paddingTop,\n    paddingBottom: paddingBottom + wrapperInset.insetBottom,\n    paddingLeft: paddingLeft + wrapperInset.insetLeft,\n    paddingRight: paddingRight + wrapperInset.insetRight,\n  };\n}\n\n/**\n * Helper function to \"append\" extra margin in MessageComponent style\n */\nexport function styleWithInsetMargin(style, wrapperInset, hideStatusBar = false) {\n  const { width: viewWidth } = Dimensions.get(\"window\");\n\n  let {\n    margin = 0,\n    marginVertical = margin,\n    marginHorizontal = margin,\n    marginTop = marginVertical,\n    marginBottom = marginVertical,\n    marginLeft = marginHorizontal,\n    marginRight = marginHorizontal,\n    ...viewStyle\n  } = StyleSheet.flatten(style || {});\n\n  if (typeof marginTop !== \"number\") {\n    marginTop = doubleFromPercentString(marginTop) * viewWidth;\n  }\n\n  if (typeof marginBottom !== \"number\") {\n    marginBottom = doubleFromPercentString(marginBottom) * viewWidth;\n  }\n\n  if (typeof marginLeft !== \"number\") {\n    marginLeft = doubleFromPercentString(marginLeft) * viewWidth;\n  }\n\n  if (typeof marginRight !== \"number\") {\n    marginRight = doubleFromPercentString(marginRight) * viewWidth;\n  }\n\n  return {\n    ...viewStyle,\n    marginTop: !!wrapperInset.isIPhoneX || !hideStatusBar ? marginTop + wrapperInset.insetTop : marginTop,\n    marginBottom: marginBottom + wrapperInset.insetBottom,\n    marginLeft: marginLeft + wrapperInset.insetLeft,\n    marginRight: marginRight + wrapperInset.insetRight,\n  };\n}\n\n/**\n * Utility component wrapper to handle orientation changes and extra padding controle for iOS (specially iPads and iPhone X)\n */\nexport default class FlashMessageWrapper extends Component {\n  static defaultProps = {\n    /**\n     * Default FlashMessage position is \"top\"\n     * Other options like \"bottom\" and \"center\" uses other extra padding configurations\n     */\n    position: \"top\",\n  };\n  static propTypes = {\n    position: PropTypes.string,\n    children: PropTypes.func.isRequired,\n  };\n  static setStatusBarHeight = height => {\n    _customStatusBarHeight = height;\n  };\n  constructor() {\n    super();\n\n    this.handleOrientationChange = this.handleOrientationChange.bind(this);\n\n    const isLandscape = isOrientationLandscape(Dimensions.get(\"window\"));\n    this.state = { isLandscape };\n  }\n  componentDidMount() {\n    Dimensions.addEventListener(\"change\", this.handleOrientationChange);\n  }\n  componentWillUnmount() {\n    Dimensions.removeEventListener(\"change\", this.handleOrientationChange);\n  }\n  handleOrientationChange({ window }) {\n    const isLandscape = isOrientationLandscape(window);\n    this.setState({ isLandscape });\n  }\n  render() {\n    const { position, children } = this.props;\n    const { isLandscape } = this.state;\n\n    const _statusBarHeight = statusBarHeight(isLandscape);\n\n    /**\n     * This wrapper will return data about extra inset padding, statusBarHeight and some device detection like iPhoneX and iPad\n     */\n    const wrapper = {\n      isLandscape,\n      isIPhoneX: isIPhoneX,\n      isIPad: isIPad,\n      statusBarHeight: _statusBarHeight,\n      insetTop: position === \"top\" ? _statusBarHeight : 0,\n      insetLeft: (position === \"top\" || position === \"bottom\") && isLandscape ? (isIPhoneX ? 21 : 0) : 0,\n      insetRight: (position === \"top\" || position === \"bottom\") && isLandscape ? (isIPhoneX ? 21 : 0) : 0,\n      insetBottom: isIPhoneX && position === \"bottom\" ? (isLandscape ? 24 : 34) : 0,\n    };\n\n    return children(wrapper);\n  }\n}\n"]}