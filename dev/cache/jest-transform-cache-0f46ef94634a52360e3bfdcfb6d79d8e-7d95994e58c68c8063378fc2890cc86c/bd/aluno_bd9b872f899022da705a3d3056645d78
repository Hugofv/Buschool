ee508d2f29e13cc085090ec2aa7c4a88
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _reactRedux = require("react-redux");

var _react = _interopRequireWildcard(require("react"));

var _aluno = require("../../actions/aluno");

var _reactNativeFontawesome = _interopRequireWildcard(require("react-native-fontawesome"));

var _reactNative = require("react-native");

var _nativeBase = require("native-base");

var Aluno = function (_Component) {
  (0, _inherits2.default)(Aluno, _Component);

  function Aluno(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Aluno);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Aluno).call(this, props));
    _this.state = {
      form: false,
      aluno: {}
    };
    return _this;
  }

  (0, _createClass2.default)(Aluno, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.props.fetchAlunos();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react.default.createElement(_nativeBase.Container, {
        style: styles.container
      }, this.state.form ? _react.default.createElement(FormAluno, {
        closeForm: function closeForm() {
          return _this2.setState({
            form: !_this2.state.form
          });
        },
        aluno: this.state.aluno,
        addAluno: this.props.addAluno
      }) : _react.default.createElement(_nativeBase.Container, {
        style: styles.container
      }, _react.default.createElement(_reactNative.View, {
        style: {
          flex: 1,
          flexDirection: 'column',
          width: '100%'
        }
      }, _react.default.createElement(_nativeBase.Button, {
        style: {
          backgroundColor: '#bc9f0b',
          width: '98%',
          margin: 5,
          justifyContent: 'flex-start'
        },
        onPress: function onPress() {
          return _this2.setState({
            form: !_this2.state.form
          });
        }
      }, _react.default.createElement(_reactNativeFontawesome.default, {
        style: {
          color: '#fff',
          marginRight: 10,
          marginLeft: 10,
          borderBottomColor: 'transparent'
        }
      }, _reactNativeFontawesome.Icons.plus), _react.default.createElement(_reactNative.Text, {
        style: {
          color: '#fff'
        }
      }, "Novo")), _react.default.createElement(ListAluno, {
        toggleForm: function toggleForm() {
          return _this2.setState({
            form: !_this2.state.form
          });
        },
        setAluno: function setAluno(aluno) {
          return _this2.setState({
            aluno: aluno
          });
        },
        alunos: this.props.aluno
      }))));
    }
  }]);
  return Aluno;
}(_react.Component);

var FormAluno = function (_Component2) {
  (0, _inherits2.default)(FormAluno, _Component2);

  function FormAluno() {
    var _this3;

    (0, _classCallCheck2.default)(this, FormAluno);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FormAluno).call(this));
    _this3.state = {
      id: '',
      nome: '',
      cpf: '',
      rg: '',
      dataNascimento: '',
      nomeResponsavel: '',
      telefoneResponsavel: '',
      escola: '',
      endereco: '',
      observacoes: ''
    };
    _this3.submit = _this3.submit.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this3)));
    return _this3;
  }

  (0, _createClass2.default)(FormAluno, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.setState({
        id: this.props.aluno.key,
        nome: this.props.aluno.nome,
        cpf: this.props.aluno.cpf,
        rg: this.props.aluno.rg,
        dataNascimento: this.props.aluno.dataNascimento,
        nomeResponsavel: this.props.aluno.nomeResponsavel,
        telefoneResponsavel: this.props.aluno.telefoneResponsavel,
        escola: this.props.aluno.escola,
        endereco: this.props.aluno.endereco,
        observacoes: this.props.aluno.observacoes
      });
    }
  }, {
    key: "submit",
    value: function submit() {
      var _this4 = this;

      var aluno = {
        id: this.state.id || '',
        nome: this.state.nome || '',
        cpf: this.state.cpf || '',
        rg: this.state.rg || '',
        dataNascimento: this.state.dataNascimento || '',
        nomeResponsavel: this.state.nomeResponsavel || '',
        telefoneResponsavel: this.state.telefoneResponsavel || '',
        escola: this.state.escola || '',
        endereco: this.state.endereco || '',
        observacoes: this.state.observacoes || ''
      };
      this.props.addAluno(aluno).then(function () {
        _this4.props.closeForm();
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this5 = this;

      return _react.default.createElement(_reactNative.View, {
        style: {
          flex: 1,
          flexDirection: 'column'
        }
      }, _react.default.createElement(_reactNative.View, {
        style: {
          flex: 1,
          flexDirection: 'row',
          alignItems: 'center',
          justifyContent: 'center'
        }
      }, _react.default.createElement(_reactNative.TouchableOpacity, {
        onPress: this.props.closeForm
      }, _react.default.createElement(_reactNativeFontawesome.default, {
        style: styles.button_return
      }, _reactNativeFontawesome.Icons.angleLeft)), _react.default.createElement(_reactNative.Text, {
        style: styles.title
      }, "Aluno"), _react.default.createElement(_reactNative.Image, {
        style: styles.logo,
        source: require('./../../assets/img/bus.png')
      })), _react.default.createElement(_nativeBase.Form, {
        style: styles.formuario
      }, _react.default.createElement(_nativeBase.Item, null, _react.default.createElement(_nativeBase.Input, {
        onChangeText: function onChangeText(value) {
          return _this5.setState({
            nome: value
          });
        },
        value: this.state.nome,
        placeholder: "Nome",
        style: {
          color: '#fff'
        }
      })), _react.default.createElement(_nativeBase.Item, null, _react.default.createElement(_nativeBase.Input, {
        onChangeText: function onChangeText(value) {
          return _this5.setState({
            cpf: value
          });
        },
        value: this.state.cpf,
        placeholder: "CPF",
        style: {
          color: '#fff'
        }
      })), _react.default.createElement(_nativeBase.Item, null, _react.default.createElement(_nativeBase.Input, {
        onChangeText: function onChangeText(value) {
          return _this5.setState({
            rg: value
          });
        },
        value: this.state.rg,
        placeholder: "RG",
        style: {
          color: '#fff'
        }
      })), _react.default.createElement(_nativeBase.Item, null, _react.default.createElement(_nativeBase.Input, {
        onChangeText: function onChangeText(value) {
          return _this5.setState({
            dataNascimento: value
          });
        },
        value: this.state.dataNascimento,
        type: "date",
        placeholder: "Data de Nascimento",
        style: {
          color: '#fff'
        }
      })), _react.default.createElement(_nativeBase.Item, null, _react.default.createElement(_nativeBase.Input, {
        onChangeText: function onChangeText(value) {
          return _this5.setState({
            nomeResponsavel: value
          });
        },
        value: this.state.nomeResponsavel,
        placeholder: "Nome Respons\xE1vel",
        style: {
          color: '#fff'
        }
      })), _react.default.createElement(_nativeBase.Item, null, _react.default.createElement(_nativeBase.Input, {
        onChangeText: function onChangeText(value) {
          return _this5.setState({
            telefoneResponsavel: value
          });
        },
        value: this.state.telefoneResponsavel,
        placeholder: "Telefone Respons\xE1vel",
        style: {
          color: '#fff'
        }
      })), _react.default.createElement(_nativeBase.Item, null, _react.default.createElement(_nativeBase.Input, {
        onChangeText: function onChangeText(value) {
          return _this5.setState({
            escola: value
          });
        },
        value: this.state.escola,
        placeholder: "Escola",
        style: {
          color: '#fff'
        }
      })), _react.default.createElement(_nativeBase.Item, null, _react.default.createElement(_nativeBase.Input, {
        onChangeText: function onChangeText(value) {
          return _this5.setState({
            endereco: value
          });
        },
        value: this.state.endereco,
        placeholder: "Endere\xE7o/Regi\xE3o",
        style: {
          color: '#fff'
        }
      })), _react.default.createElement(_nativeBase.Item, null, _react.default.createElement(_nativeBase.Input, {
        onChangeText: function onChangeText(value) {
          return _this5.setState({
            observacoes: value
          });
        },
        value: this.state.observacoes,
        placeholder: "Observa\xE7\xF5es",
        style: {
          color: '#fff'
        }
      })), _react.default.createElement(_nativeBase.Button, {
        last: true,
        onPress: this.submit,
        style: styles.button
      }, _react.default.createElement(_reactNative.Text, {
        style: styles.button_text
      }, "Salvar"))));
    }
  }]);
  return FormAluno;
}(_react.Component);

var ListAluno = function (_Component3) {
  (0, _inherits2.default)(ListAluno, _Component3);

  function ListAluno(props) {
    var _this6;

    (0, _classCallCheck2.default)(this, ListAluno);
    _this6 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListAluno).call(this, props));
    _this6.updateAluno = _this6.updateAluno.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this6)));
    return _this6;
  }

  (0, _createClass2.default)(ListAluno, [{
    key: "updateAluno",
    value: function updateAluno(aluno) {
      this.props.setAluno(aluno);
      this.props.toggleForm();
    }
  }, {
    key: "render",
    value: function render() {
      var _this7 = this;

      return _react.default.createElement(_nativeBase.Container, {
        style: styles.container
      }, _react.default.createElement(_reactNative.View, {
        style: {
          flex: 1,
          flexDirection: 'column',
          width: '98%'
        }
      }, _react.default.createElement(_nativeBase.List, null, _react.default.createElement(_nativeBase.ListItem, {
        style: {
          width: '100%'
        },
        itemHeader: true,
        first: true
      }, _react.default.createElement(_reactNative.Text, {
        style: {
          color: '#fff',
          fontSize: 30
        }
      }, "Alunos")), this.props.alunos.map(function (e) {
        return _react.default.createElement(_nativeBase.ListItem, {
          style: {
            width: '98%'
          },
          key: e.key,
          icon: true
        }, _react.default.createElement(_nativeBase.Left, {
          style: {
            width: '85%',
            justifyContent: 'flex-start'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            color: '#fff',
            textAlign: 'left'
          }
        }, e.nome)), _react.default.createElement(_nativeBase.Right, {
          style: {
            width: '15%',
            justifyContent: 'space-between'
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return _this7.updateAluno(e);
          }
        }, _react.default.createElement(_reactNativeFontawesome.default, {
          style: {
            color: '#fff'
          }
        }, _reactNativeFontawesome.Icons.pencil)), _react.default.createElement(_reactNativeFontawesome.default, {
          style: {
            color: '#fff'
          }
        }, _reactNativeFontawesome.Icons.timesCircle)));
      }))));
    }
  }]);
  return ListAluno;
}(_react.Component);

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#303030',
    width: _reactNative.Dimensions.get('window').width
  },
  box_button: {
    flex: 1,
    flexDirection: 'row',
    justifyContent: 'space-between',
    backgroundColor: '#0F0E0F',
    padding: '5%'
  },
  title: {
    fontSize: 48,
    color: '#fff',
    justifyContent: 'center'
  },
  logo: {
    width: 100,
    height: 100
  },
  button: {
    width: '100%',
    alignItems: 'center',
    justifyContent: 'center',
    margin: 5,
    marginTop: 30,
    backgroundColor: '#bc9f0b'
  },
  button_text: {
    color: '#fff',
    fontSize: 20
  },
  formuario: {
    backgroundColor: '#0F0E0F',
    width: _reactNative.Dimensions.get('window').width,
    padding: 10
  },
  title: {
    fontSize: 48,
    color: '#fff',
    justifyContent: 'center'
  },
  button_return: {
    color: '#bc9f0b',
    fontSize: 48,
    textAlign: "center",
    textAlign: "left",
    padding: 10
  }
});

function mapStateToProps(state) {
  return {
    width: _reactNative.Dimensions.get('window').width,
    aluno: state.aluno.alunos
  };
}

var _default = (0, _reactRedux.connect)(mapStateToProps, {
  fetchAlunos: _aluno.fetchAlunos,
  addAluno: _aluno.addAluno
})(Aluno);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,